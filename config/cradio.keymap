// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 2500  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/mouse.h>

#define DEF 0
#define NUM 1
#define SYM 2
#define FUN 3
#define SYS 4
#define MOUSE 5

#define U_MS_U &mmv MOVE_UP
#define U_MS_D &mmv MOVE_DOWN
#define U_MS_L &mmv MOVE_LEFT
#define U_MS_R &mmv MOVE_RIGHT
#define U_WH_U &msc SCRL_UP
#define U_WH_D &msc SCRL_DOWN
#define U_WH_L &msc SCRL_LEFT
#define U_WH_R &msc SCRL_RIGHT

/ {
    chosen {
        zmk,charmap = &charmap_us;
    };
    behaviors {
        ht: hold_tap {
            label = "hold_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };
        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <300>;    // 40
            delay-ms = <0>;                   // 0
        };
        msc {
            acceleration-exponent = <0>;      // 0
            time-to-max-speed-ms = <40>;      // 500
            delay-ms = <0>;                   // 10
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <SYM FUN>;
            then-layer = <SYS>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        def {
            bindings = <
&kp Q        &kp W       &kp E        &kp R        &kp T         &kp Y      &kp U        &kp I        &kp O       &kp P
&ht LGUI A   &ht LALT S  &ht LCTRL D  &ht LSHFT F  &kp G         &kp H      &ht RSHFT J  &ht RCTRL K  &ht RALT L  &ht RGUI SEMI
&kp Z        &kp X       &kp C        &kp V        &kp B         &kp N      &kp M        &kp COMMA    &kp DOT     &kp FSLH
                                &lt SYM SPACE  &lt NUM TAB     &kp ENTER &lt FUN BSPC
            >;
        };

        num {
            bindings = <
&kp N1        &kp N2        &kp N3         &kp N4          &kp N5          &kp N6              &kp N7        &kp N8        &kp N9         &kp N0
&kp LEFT_GUI  &kp LEFT_ALT  &kp LCTRL      &kp LEFT_SHIFT  &kp CAPSLOCK    &kp LEFT            &kp DOWN      &kp UP        &kp RIGHT      &kp PAGE_UP
&trans        &trans        &kp LC(LG(C))  &trans          &kp ESC         &kp LG(LEFT)        &kp LG(DOWN)  &kp LG(UP)    &kp RG(RIGHT)  &kp PAGE_DOWN
                                           &trans          &trans          &tog MOUSE          &trans           
            >;
        };

        sym {
            bindings = <
&kp EXCLAMATION    &kp AT           &kp HASH       &kp DOLLAR      &kp PERCENT     &kp CARET  &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp LEFT_BRACKET   &kp LEFT_BRACE   &kp PIPE       &kp LEFT_SHIFT  &kp CAPSLOCK    &kp PLUS   &kp MINUS      &kp GRAVE     &kp SLASH             &kp SINGLE_QUOTE
&kp RIGHT_BRACKET  &kp RIGHT_BRACE  &kp LG(LC(C))  &trans          &kp ESC         &kp EQUAL  &kp UNDER      &kp TILDE     &kp BACKSLASH         &kp DOUBLE_QUOTES
                                                   &trans          &trans          &trans     &trans
            >;
        };

        fun {
            bindings = <
&kp F1   &kp F2   &kp F3  &kp F4  &kp F5    &kp F6  &kp F7  &kp F8  &kp F9  &kp F10
&kp F11  &kp F12  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans   &trans   &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                          &trans  &trans    &trans  &trans
            >;
        };

        sys {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4      &kp C_MUTE       &trans  &trans  &trans  &trans
&trans        &default_report &out OUT_TOG  &bt BT_CLR    &bt BT_CLR_ALL    &kp C_VOLUME_UP  &trans  &trans  &trans  &trans
&bootloader   &trans          &trans        &trans        &trans            &kp C_VOL_DN     &trans  &trans  &trans  &bootloader
                                            &trans        &trans            &trans           &trans
            >;
        };

        mouse {
            bindings = <
&tog MOUSE  &mkp MB4  &mkp MCLK  &mkp MB5   &trans      &msc SCRL_LEFT     &msc SCRL_DOWN    &msc SCRL_UP     &msc SCRL_RIGHT    &tog MOUSE
&trans      &trans    &trans     &trans     &kp LSHFT   &mmv MOVE_LEFT     &mmv MOVE_DOWN    &mmv MOVE_UP     &mmv MOVE_RIGHT    &trans
&trans      &trans    &trans     &trans     &trans      &trans             &mkp MB4          &mkp MCLK        &mkp MB5           &trans
                                 &kp SPACE  &kp TAB     &mkp LCLK  &mkp RCLK
            >;
        };
    };
};
